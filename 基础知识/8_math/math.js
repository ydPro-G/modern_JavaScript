// 基础运算符

// 术语介绍，运算元，一元运算符，二元运算符

// 1.运算元：运算符应用的对象 5 - 2 ,两个运算元，5，2.什么奇葩的术语....

// 2. 一元运算符：一个运算符只有一个对应的运算元
let x = 1;
x = -x; // 太弱智了

// 3.二元运算符：一个运算符有两个运算元
let x = 2,y = 3;
alert(y-x);









// 数学:+,-,*,/,%,**






// 用二元运算符+链接字符串
let x = '1',y = 2;
alert(x+y);  // "12"   只要任意一个运算符是字符串，那么另一个运算元也会被转化成字符串
 // 只有+ 支持这种方式，其他都是把运算元转化成数字







 // 使用一元运算符+ 转化数字
 // 如果运算元不是数字， + 会将其转化为数字
 let num = "2",
     number = "3";
alert(+num + +number);  // + 转化为数字计算，5






// 运算符优先级，一元运算符优先级高于二元运算符







// 自增/自减：只能应用于变量
let counter = 2;
counter++; //和counter = counter + 1 效果一样    自增

let counter = 2;
counter--; //和counter = counter - 1 效果一样 自减






// ++number   和  number++   的区别
let number = 1;
let a = ++number;
alert(a); //2,    先+完再输出加完的新值

let b = number++;
alert(b);// 1,     先输出旧值，也就是做假发之前的值




